<?phpnamespace controller;use Couchbase\IndexFailureException;use model\branchModel;include '../model/branchModel.php';class branchController{ public function DisplayBranch() {     $model = new branchModel();     $model->DisplayBranchList(); } // creating new branch    public function CreateNewBranch()    {        $branch = $_POST['BranchName'];        if (empty($branch)){            echo json_encode(['success' => false,'message' => 'branch is required']);        }else{            $modal = new branchModel();            $modal->CreateBranch($branch);        }    }    public function ArchiveBranch()    {        $id = $_POST['id'];        if (isset($id)){            $modal = new branchModel();            $modal->ArchiveBranch($id);        }else{            echo json_encode('No Id');        }    }    public  function UpdateBranch()    {        $id = $_POST['id'];        if (isset($id)){            $modal = new branchModel();            $modal->UpdateBranch($id);        }else{            echo json_encode('No Id');        }    }    public function SaveBranch()    {        $id = $_POST['id'];        $branch = $_POST['BranchNameSave'];        if (isset($id)){            $modal = new branchModel();            $modal->SaveUpdateBranch($branch,$id);        }else{            echo json_encode('No Id');        }    }}if ($_SERVER['REQUEST_METHOD'] === 'POST'){    if (isset($_POST['action'])){        $controller = new branchController();        switch ($_POST['action']){            case 'create':                $controller->CreateNewBranch();                break;            case 'delete':                $controller->ArchiveBranch();                break;            case 'update':                $controller->UpdateBranch();                break;            case 'SaveBranch':                $controller->SaveBranch();                break;        }    }}