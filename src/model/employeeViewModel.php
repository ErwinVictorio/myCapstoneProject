<?phpnamespace model;use config\DbConnection;include_once '../config/DbConnection.php';class employeeViewModel extends DbConnection{    public function showProductInfoBaseOnId($productId)    {        $query = "SELECT branch,current_stack,unit_price,product_id FROM product WHERE product_id = ? AND  Status = 'Active'";        $stmt = $this->Connect()->prepare($query);        $stmt->bind_param('i',$productId);        $stmt->execute();        $result = $stmt->get_result();        if ($result->num_rows > 0){            $dataRow = [];            while ($row = $result->fetch_assoc()){                $dataRow[] = $row;            }            return $dataRow;        }        return  null;    }    // store the sales    public function storeSales($productId,$quantitySold,$saleAmount,$saleDate,$branch,$employeeName)    {       $query = "INSERT INTO sales(product_id, quantity_sold, sale_amount, Sales_date, branch, EmployeeName) VALUES (?,?,?,?,?,?)";       $stmt = $this->Connect()->prepare($query);       $stmt->bind_param('iidsss',$productId,$quantitySold,$saleAmount,$saleDate,$branch,$employeeName);       if ($stmt->execute()){           return ['success' => true ,'message' => 'Sales is Successfully Created'];       }else{           return ['success' => false ,'message' => 'Error'. $stmt->error];       }    }    public function decreaseStocks($quantity,$productId)    {      $query = "SELECT current_stack FROM product WHERE product_id = ?";      $stmt = $this->Connect()->prepare($query);      $stmt->bind_param('i',$productId);      $stmt->execute();      $result =  $stmt->get_result();      if ($result->num_rows > 0){          $dataRow = $result->fetch_assoc();       $currentStock = $dataRow['current_stack'];       // check if the stock is greater than quantity          if ($currentStock >= $quantity){              $newStock = $currentStock - $quantity;              $query = "UPDATE product SET current_stack = ? WHERE product_id = ?";              $stmt = $this->Connect()->prepare($query);              $stmt->bind_param('ii',$newStock,$productId);              if ($stmt->execute()){                return ['success' => true, 'message' => 'stock is successfully update'];              }else{                 return ['success' => false, 'message' => 'Error to update stock' .$stmt->error];              }          }else{              return ['success' => false , 'message' => 'Not enough stock available'];          }      }      return [];    }    public function showAllSalesToday($dateToday,$branch)    {        $query =  "SELECT * FROM sales WHERE Sales_date = ? AND branch = ?";        $stmt = $this->Connect()->prepare($query);        $stmt->bind_param('ss',$dateToday,$branch);        $stmt->execute();        $result = $stmt->get_result();        if ($result->num_rows > 0){            $dataRow = [];            while ($row = $result->fetch_assoc()){                $dataRow[] = $row;            }            return $dataRow;        }        return [];    }}